services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: sport_predictions_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: sport_predictions
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sport_predictions_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8001
      MONGO_URL: mongodb://mongodb:27017/sport_predictions
    env_file:
      - ./backend/.env.production
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "8001:8001"
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: http://185.174.136.113
    container_name: sport_predictions_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3000:80"
    networks:
      - app-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sport_predictions_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge