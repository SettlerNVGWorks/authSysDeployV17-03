#!/bin/bash

echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SendGrid –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
echo "==========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose ps

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:"
docker compose exec backend printenv | grep -E "(SENDGRID|FRONTEND_URL|NODE_ENV)"

echo ""
echo "üìß –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç SendGrid –≤–Ω—É—Ç—Ä–∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker compose exec backend node -e "
require('dotenv').config();
const sgMail = require('@sendgrid/mail');

console.log('API Key:', process.env.SENDGRID_API_KEY ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
console.log('From Email:', process.env.SENDGRID_FROM_EMAIL || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
console.log('Frontend URL:', process.env.FRONTEND_URL || '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');

if (process.env.SENDGRID_API_KEY) {
  sgMail.setApiKey(process.env.SENDGRID_API_KEY);
  sgMail.send({
    to: process.env.SENDGRID_FROM_EMAIL,
    from: process.env.SENDGRID_FROM_EMAIL,
    subject: '–¢–µ—Å—Ç –∏–∑ Docker',
    text: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –∏–∑ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞'
  }).then(() => {
    console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  }).catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', err.message);
    if (err.response) {
      console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', err.response.status);
      console.error('–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', err.response.body);
    }
  });
} else {
  console.error('‚ùå SendGrid API key –Ω–µ –Ω–∞–π–¥–µ–Ω');
}
"

echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
docker compose logs backend --tail=20